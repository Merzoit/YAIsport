# Generated by Django 5.0.1 on 2024-01-15 18:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Без названия', max_length=16, verbose_name='Название')),
                ('code', models.CharField(default='Без кода', max_length=8, verbose_name='Код страны')),
                ('flag_url', models.CharField(default='Без флага', max_length=64, verbose_name='Ссылка на флаг страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Полное имя')),
                ('first_name', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Фамилия')),
                ('age', models.IntegerField(blank=True, default=0, null=True, verbose_name='Возраст')),
                ('birthday', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='День рождения')),
                ('nationality', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Национальность')),
                ('height', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Рост')),
                ('weight', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Вес')),
                ('photo', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='Ссылка на фото')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False, verbose_name='Год сезона')),
            ],
            options={
                'verbose_name': 'Сезон',
                'verbose_name_plural': 'Сезоны',
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Без имени', max_length=64, verbose_name='Название')),
                ('address', models.CharField(default='Без адресса', max_length=128, verbose_name='Адресс')),
                ('city', models.CharField(default='Без города', max_length=64, verbose_name='Город')),
                ('surface', models.CharField(default='Без покрытия', max_length=64, verbose_name='Покрытие')),
                ('capacity', models.IntegerField(default=0, verbose_name='Вместительность')),
                ('image', models.CharField(default='Без фото', max_length=128, verbose_name='Ссылка на фото')),
            ],
            options={
                'verbose_name': 'Стадион',
                'verbose_name_plural': 'Стадионы',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Без названия', max_length=64, verbose_name='Название')),
                ('logo_url', models.CharField(default='Без логотипа', max_length=64, verbose_name='Ссылка на логотип лиги')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.country', verbose_name='Страна')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.season', verbose_name='Сезон')),
            ],
            options={
                'verbose_name': 'Лига',
                'verbose_name_plural': 'Лиги',
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата матча')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время матча')),
                ('status', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Статус')),
                ('goals_home', models.IntegerField(blank=True, default=0, null=True, verbose_name='Голов домашней команды')),
                ('goals_away', models.IntegerField(blank=True, default=0, null=True, verbose_name='Голов гостевой команды')),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.league', verbose_name='Лига')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.season', verbose_name='Сезон')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Без названия', max_length=64, verbose_name='Название')),
                ('code', models.CharField(blank=True, max_length=8, null=True, verbose_name='Код команды')),
                ('logo_url', models.CharField(default='Без логотипа', max_length=64, verbose_name='Ссылка на логотип команды')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.country', verbose_name='Страна')),
                ('league', models.ManyToManyField(to='core.league', verbose_name='Лига')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.season', verbose_name='Сезон')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.venue', verbose_name='Стадион')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='PlayerStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearences', models.IntegerField(blank=True, null=True, verbose_name='Количество появлений на поле')),
                ('lineups', models.IntegerField(blank=True, null=True, verbose_name='Количество появлений в стартовом составе')),
                ('minutes', models.IntegerField(blank=True, null=True, verbose_name='Количество минут на поле')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Номер игрока')),
                ('position', models.CharField(blank=True, max_length=32, null=True, verbose_name='Позиция игрока')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Рейтинг игрока')),
                ('sub_in', models.IntegerField(blank=True, null=True, verbose_name='Выходов на замену')),
                ('sub_out', models.IntegerField(blank=True, null=True, verbose_name='Был заменён')),
                ('sub_bench', models.IntegerField(blank=True, null=True, verbose_name='На скамейке')),
                ('shots_total', models.IntegerField(blank=True, null=True, verbose_name='Ударов')),
                ('shots_on', models.IntegerField(blank=True, null=True, verbose_name='Ударов в створ')),
                ('goals_total', models.IntegerField(blank=True, null=True, verbose_name='Голов')),
                ('goals_assists', models.IntegerField(blank=True, null=True, verbose_name='Голевых передач')),
                ('goals_conceded', models.IntegerField(blank=True, null=True, verbose_name='Пропущенных голов')),
                ('goals_saves', models.IntegerField(blank=True, null=True, verbose_name='Сэйвов')),
                ('passes_total', models.IntegerField(blank=True, null=True, verbose_name='Передач')),
                ('passes_key', models.IntegerField(blank=True, null=True, verbose_name='Ключевых передач')),
                ('passes_accuracy', models.FloatField(blank=True, null=True, verbose_name='Процент точных передач')),
                ('tackles_total', models.IntegerField(blank=True, null=True, verbose_name='Количество отборов')),
                ('tackles_blocks', models.IntegerField(blank=True, null=True, verbose_name='Блокированных мячей')),
                ('tackles_interception', models.IntegerField(blank=True, null=True, verbose_name='Количество перехватов')),
                ('duels_total', models.IntegerField(blank=True, null=True, verbose_name='Количество единоборств')),
                ('duels_won', models.IntegerField(blank=True, null=True, verbose_name='Удачных единоборств')),
                ('dribbles_attempts', models.IntegerField(blank=True, null=True, verbose_name='Попыток дриблинга')),
                ('dribbles_success', models.IntegerField(blank=True, null=True, verbose_name='Успешных дриблингов')),
                ('dribbles_past', models.IntegerField(blank=True, null=True, verbose_name='Игроков обыгранных в дриблинге')),
                ('fouls_drawn', models.IntegerField(blank=True, null=True, verbose_name='Заработанных фолов')),
                ('fouls_committed', models.IntegerField(blank=True, null=True, verbose_name='Совершённых фолов')),
                ('cards_yellow', models.IntegerField(blank=True, null=True, verbose_name='Жёлтых карточек')),
                ('cards_yellow_red', models.IntegerField(blank=True, null=True, verbose_name='Двойных жёлтых карточек')),
                ('cards_red', models.IntegerField(blank=True, null=True, verbose_name='Красных карточек')),
                ('penalty_won', models.IntegerField(blank=True, null=True, verbose_name='Заработанных пенальти')),
                ('penalty_committed', models.IntegerField(blank=True, null=True, verbose_name='Нарушений в штрафной')),
                ('penalty_scored', models.IntegerField(blank=True, null=True, verbose_name='Забитых пенальти')),
                ('penalty_missed', models.IntegerField(blank=True, null=True, verbose_name='Не забитых пенальти')),
                ('penalty_saved', models.IntegerField(blank=True, null=True, verbose_name='Отбитых пенальти')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.league', verbose_name='Лига')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.player', verbose_name='Игрок')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.season', verbose_name='Сезон')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Статистика игрока',
                'verbose_name_plural': 'Статистики игроков',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.team', verbose_name='Команда'),
        ),
        migrations.CreateModel(
            name='LeagueTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Позиция')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='Очки')),
                ('form', models.CharField(default='', max_length=64, verbose_name='Форма')),
                ('played', models.PositiveIntegerField(default=0, verbose_name='Всего игр')),
                ('win', models.PositiveIntegerField(default=0, verbose_name='Победа')),
                ('draw', models.PositiveIntegerField(default=0, verbose_name='Ничья')),
                ('lose', models.PositiveIntegerField(default=0, verbose_name='Поражение')),
                ('goal_for', models.PositiveIntegerField(default=0, verbose_name='Забитых мячей')),
                ('goal_against', models.PositiveIntegerField(default=0, verbose_name='Пропущенных мячей')),
                ('played_home', models.PositiveIntegerField(default=0, verbose_name='Всего игр дома')),
                ('win_home', models.PositiveIntegerField(default=0, verbose_name='Победа дома')),
                ('draw_home', models.PositiveIntegerField(default=0, verbose_name='Ничья дома')),
                ('lose_home', models.PositiveIntegerField(default=0, verbose_name='Поражение дома')),
                ('goal_for_home', models.PositiveIntegerField(default=0, verbose_name='Забитых мячей дома')),
                ('goal_against_home', models.PositiveIntegerField(default=0, verbose_name='Пропущенных мячей дома')),
                ('played_away', models.PositiveIntegerField(default=0, verbose_name='Всего игр в гостях')),
                ('win_away', models.PositiveIntegerField(default=0, verbose_name='Победа в гостях')),
                ('draw_away', models.PositiveIntegerField(default=0, verbose_name='Ничья в гостях')),
                ('lose_away', models.PositiveIntegerField(default=0, verbose_name='Поражение в гостях')),
                ('goal_for_away', models.PositiveIntegerField(default=0, verbose_name='Забитых мячей в гостях')),
                ('goal_against_away', models.PositiveIntegerField(default=0, verbose_name='Пропущенных мячей в гостях')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.league', verbose_name='Лига')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Таблица',
                'verbose_name_plural': 'Таблицы',
            },
        ),
        migrations.CreateModel(
            name='FixtureStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_on_goal', models.IntegerField(default=0, verbose_name='Ударов в створ')),
                ('home_off_goal', models.IntegerField(default=0, verbose_name='Ударов мимо ворот')),
                ('home_total_shots', models.IntegerField(default=0, verbose_name='Всего ударов')),
                ('home_blocked_shots', models.IntegerField(default=0, verbose_name='Заблокированные удары')),
                ('home_shots_inside_box', models.IntegerField(default=0, verbose_name='Удары внутри штрафной площади')),
                ('home_shots_outside_box', models.IntegerField(default=0, verbose_name='Удары за пределами штрафной площади')),
                ('home_fouls', models.IntegerField(default=0, verbose_name='Фолы')),
                ('home_corner_kicks', models.IntegerField(default=0, verbose_name='Угловые удары')),
                ('home_offsides', models.IntegerField(default=0, verbose_name='Офсайды')),
                ('home_ball_possession', models.CharField(blank=True, max_length=5, null=True, verbose_name='Владение мячом')),
                ('home_yellow_cards', models.IntegerField(default=0, verbose_name='Желтые карточки')),
                ('home_red_cards', models.IntegerField(blank=True, null=True, verbose_name='Красные карточки')),
                ('home_goalkeeper_saves', models.IntegerField(default=0, verbose_name='Сейвы вратаря')),
                ('home_total_passes', models.IntegerField(default=0, verbose_name='Всего пасов')),
                ('home_passes_accurate', models.IntegerField(default=0, verbose_name='Точные пасы')),
                ('home_passes_percentage', models.CharField(blank=True, max_length=5, null=True, verbose_name='Процент точных пасов')),
                ('home_expected_goals', models.FloatField(blank=True, null=True, verbose_name='Ожидаемые голы')),
                ('away_on_goal', models.IntegerField(default=0, verbose_name='Ударов в створ')),
                ('away_off_goal', models.IntegerField(default=0, verbose_name='Ударов мимо ворот')),
                ('away_total_shots', models.IntegerField(default=0, verbose_name='Всего ударов')),
                ('away_blocked_shots', models.IntegerField(default=0, verbose_name='Заблокированные удары')),
                ('away_shots_inside_box', models.IntegerField(default=0, verbose_name='Удары внутри штрафной площади')),
                ('away_shots_outside_box', models.IntegerField(default=0, verbose_name='Удары за пределами штрафной площади')),
                ('away_fouls', models.IntegerField(default=0, verbose_name='Фолы')),
                ('away_corner_kicks', models.IntegerField(default=0, verbose_name='Угловые удары')),
                ('away_offsides', models.IntegerField(default=0, verbose_name='Офсайды')),
                ('away_ball_possession', models.CharField(blank=True, max_length=5, null=True, verbose_name='Владение мячом')),
                ('away_yellow_cards', models.IntegerField(default=0, verbose_name='Желтые карточки')),
                ('away_red_cards', models.IntegerField(blank=True, null=True, verbose_name='Красные карточки')),
                ('away_goalkeeper_saves', models.IntegerField(default=0, verbose_name='Сейвы вратаря')),
                ('away_total_passes', models.IntegerField(default=0, verbose_name='Всего пасов')),
                ('away_passes_accurate', models.IntegerField(default=0, verbose_name='Точные пасы')),
                ('away_passes_percentage', models.CharField(blank=True, max_length=5, null=True, verbose_name='Процент точных пасов')),
                ('away_expected_goals', models.FloatField(blank=True, null=True, verbose_name='Ожидаемые голы')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fixture', verbose_name='Матч')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_fixture_statistic', to='core.team')),
                ('team_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_fixture_statistic', to='core.team')),
            ],
            options={
                'verbose_name': 'Статистика матча',
                'verbose_name_plural': 'Статистики матчей',
            },
        ),
        migrations.AddField(
            model_name='fixture',
            name='team_away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_fixtures', to='core.team', verbose_name='Гостевая команда'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='team_home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_fixtures', to='core.team', verbose_name='Домашняя команда'),
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Без имени', max_length=32, null=True, verbose_name='Полное имя')),
                ('first_name', models.CharField(blank=True, default='Без имени', max_length=32, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='Без имени', max_length=32, null=True, verbose_name='Фамилия')),
                ('age', models.IntegerField(blank=True, default=0, null=True, verbose_name='Возраст')),
                ('birthday', models.CharField(default='dd-mm-yyyy', max_length=32, verbose_name='День рождения')),
                ('nationality', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Национальность')),
                ('height', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Рост')),
                ('weight', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Вес')),
                ('photo', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='Ссылка на фото')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
            },
        ),
        migrations.CreateModel(
            name='TeamStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(default='', max_length=50, verbose_name='Форма')),
                ('goal_for_015_total', models.IntegerField(default=0, verbose_name='Голов с 0 по 15 минуты')),
                ('goal_for_015_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 0 по 15 минуты')),
                ('goal_for_1630_total', models.IntegerField(default=0, verbose_name='Голов с 16 по 30 минуты')),
                ('goal_for_1630_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 16 по 30 минуты')),
                ('goal_for_3145_total', models.IntegerField(default=0, verbose_name='Голов с 31 по 45 минуты')),
                ('goal_for_3145_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 31 по 45 минуты')),
                ('goal_for_4660_total', models.IntegerField(default=0, verbose_name='Голов с 46 по 60 минуты')),
                ('goal_for_4660_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 46 по 60 минуты')),
                ('goal_for_6175_total', models.IntegerField(default=0, verbose_name='Голов с 61 по 75 минуты')),
                ('goal_for_6175_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 61 по 75 минуты')),
                ('goal_for_7690_total', models.IntegerField(default=0, verbose_name='Голов с 76 по 90 минуты')),
                ('goal_for_7690_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 76 по 90 минуты')),
                ('goal_away_015_total', models.IntegerField(default=0, verbose_name='Голов с 0 по 15 минуты')),
                ('goal_away_015_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 0 по 15 минуты')),
                ('goal_away_1630_total', models.IntegerField(default=0, verbose_name='Голов с 16 по 30 минуты')),
                ('goal_away_1630_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 16 по 30 минуты')),
                ('goal_away_3145_total', models.IntegerField(default=0, verbose_name='Голов с 16 по 30 минуты')),
                ('goal_away_3145_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 31 по 45 минуты')),
                ('goal_away_4660_total', models.IntegerField(default=0, verbose_name='Голов с 31 по 45 минуты')),
                ('goal_away_4660_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 46 по 60 минуты')),
                ('goal_away_6175_total', models.IntegerField(default=0, verbose_name='Голов с 46 по 60 минуты')),
                ('goal_away_6175_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 61 по 75 минуты')),
                ('goal_away_7690_total', models.IntegerField(default=0, verbose_name='Голов с 76 по 90 минуты')),
                ('goal_away_7690_percentage', models.CharField(default='', max_length=50, verbose_name='Голов с 76 по 90 минуты')),
                ('yellow_015_total', models.IntegerField(default=0, verbose_name='Жёлтых с 0 по 15 минуты')),
                ('yellow_015_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 0 по 15 минуты')),
                ('yellow_1630_total', models.IntegerField(default=0, verbose_name='Жёлтых с 16 по 30 минуты')),
                ('yellow_1630_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 16 по 30 минуты')),
                ('yellow_3145_total', models.IntegerField(default=0, verbose_name='Жёлтых с 31 по 45 минуты')),
                ('yellow_3145_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 31 по 45 минуты')),
                ('yellow_4660_total', models.IntegerField(default=0, verbose_name='Жёлтых с 46 по 60 минуты')),
                ('yellow_4660_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 46 по 60 минуты')),
                ('yellow_6175_total', models.IntegerField(default=0, verbose_name='Жёлтых с 61 по 75 минуты')),
                ('yellow_6175_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 61 по 75 минуты')),
                ('yellow_7690_total', models.IntegerField(default=0, verbose_name='Жёлтых с 76 по 90 минуты')),
                ('yellow_7690_percentage', models.CharField(default='', max_length=50, verbose_name='Жёлтых с 76 по 90 минуты')),
                ('red_015_total', models.IntegerField(default=0, verbose_name='Красных с 0 по 15 минуты')),
                ('red_015_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 0 по 15 минуты')),
                ('red_1630_total', models.IntegerField(default=0, verbose_name='Красных с 16 по 30 минуты')),
                ('red_1630_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 16 по 30 минуты')),
                ('red_3145_total', models.IntegerField(default=0, verbose_name='Красных с 31 по 45 минуты')),
                ('red_3145_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 31 по 45 минуты')),
                ('red_4660_total', models.IntegerField(default=0, verbose_name='Красных с 46 по 60 минуты')),
                ('red_4660_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 46 по 60 минуты')),
                ('red_6175_total', models.IntegerField(default=0, verbose_name='Красных с 61 по 75 минуты')),
                ('red_6175_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 61 по 75 минуты')),
                ('red_7690_total', models.IntegerField(default=0, verbose_name='Красных с 76 по 90 минуты')),
                ('red_7690_percentage', models.CharField(default='', max_length=50, verbose_name='Красных с 76 по 90 минуты')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.league', verbose_name='Лига')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.season', verbose_name='Сезон')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Статистика команды',
                'verbose_name_plural': 'Статистики команд',
            },
        ),
        migrations.AddField(
            model_name='fixture',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.venue', verbose_name='Стадион'),
        ),
    ]
